---
- name: "create main disks ({{ ', '.join(virtual_disks_main) }}) lv(s)"
  lvol:
    vg: '{{ virtual_disk_vg }}'
    lv: '{{ virtual_guest_name }}-{{ item }}'
    size: '{{ virtual_disks_main_size[item] }}'
  loop: '{{ virtual_disks_main }}'
  when: virtual_bootstrap_method != 'bootstrap' and virtual_disk_type == 'lv'

- name: "create main disks ({{ ', '.join(virtual_disks_main) }}) file(s) (fallocate)"
  command: 'fallocate -l {{ virtual_disks_main_size[item] }} {{ virtual_disk_prefix }}{{ virtual_disk_vg }}/{{ virtual_guest_name }}-{{ item }}'
  loop: '{{ virtual_disks_main }}'
  when: virtual_bootstrap_method != 'bootstrap' and virtual_disk_type == 'file' and virtual_disk_file_allocation == 'fallocate'

- name: "create main disks ({{ ', '.join(virtual_disks_main) }}) file(s) (qemu-img)"
  command: 'qemu-img create -f raw -o preallocation=full {{ virtual_disk_prefix }}{{ virtual_disk_vg }}/{{ virtual_guest_name }}-{{ item }} {{ virtual_disks_main_size[item] }}'
  loop: '{{ virtual_disks_main }}'
  throttle: 1
  when: virtual_bootstrap_method != 'bootstrap' and virtual_disk_type == 'file' and virtual_disk_file_allocation == 'qemu-img'

- name: include clone disks
  include_tasks: clone-disks.yml
  when: virtual_bootstrap_method == 'clone'

- name: include bootstrap disks
  include_tasks: bootstrap-disks.yml
  when: virtual_bootstrap_method == 'bootstrap'

- name: include modify disks
  include_tasks: modify-disks.yml
  when: virtual_bootstrap_method == 'clone' or virtual_bootstrap_method == 'bootstrap'

- name: include extra disks
  include_tasks: create-extra-disks.yml
  when: virtual_disks

- block:

  - name: umount root filesystem
    command: 'umount {{ virtual_disk_prefix }}{{ virtual_disk_vg }}/{{ virtual_guest_name }}-root'

  - name: remove mount dir
    file:
      path: '{{ virtual_mount_path }}'
      state: absent

  when: virtual_bootstrap_method == 'clone' or virtual_bootstrap_method == 'bootstrap'

- name: include host boot
  include_tasks: host-boot.yml
  when: virtual_boot_method == 'host'
