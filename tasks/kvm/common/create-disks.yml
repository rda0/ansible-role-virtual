---
- name: "create main disks ({{ ', '.join(virtual_disks_main) }}) lv(s)"
  community.general.lvol:
    vg: '{{ virtual_disk_vg }}'
    lv: '{{ virtual_guest_name }}-{{ item }}'
    size: '{{ virtual_disks_main_size[item] }}'
  loop: '{{ virtual_disks_main }}'
  when: virtual_bootstrap_method != 'bootstrap' and virtual_disk_type == 'lv'

- name: "create main disks ({{ ', '.join(virtual_disks_main) }}) zvol(s)"
  community.general.zfs:
    name: '{{ virtual_disk_vg }}/{{ virtual_guest_name }}-{{ item }}'
    state: present
    extra_zfs_properties: '{{ virtual_disk_zfs_props | combine({"volsize": virtual_disks_main_size[item]}) | combine({"volblocksize": virtual_disk_bs}) }}'
  loop: '{{ virtual_disks_main }}'
  when: virtual_bootstrap_method != 'bootstrap' and virtual_disk_type == 'zvol'

- name: create template file directory
  file:
    path: '{{ virtual_template_path }}'
    state: directory
    owner: root
    group: libvirt-qemu
    mode: '0750'
  when: virtual_template_type == 'file'

- name: create disk image file directory
  file:
    path: '{{ virtual_disk_prefix }}{{ virtual_disk_vg }}'
    state: directory
    owner: root
    group: libvirt-qemu
    mode: '0750'
  when: virtual_disk_type == 'file'

- name: "create main disks ({{ ', '.join(virtual_disks_main) }}) file(s) (fallocate)"
  command: 'fallocate -l {{ virtual_disks_main_size[item] }} {{ virtual_disk_prefix }}{{ virtual_disk_vg }}/{{ virtual_guest_name }}-{{ item }}{{ virtual_disk_suffix }}'
  loop: '{{ virtual_disks_main }}'
  when: virtual_bootstrap_method != 'bootstrap' and virtual_disk_type == 'file' and virtual_disk_file_allocation == 'fallocate'

- name: "create main disks ({{ ', '.join(virtual_disks_main) }}) file(s) (qemu-img)"
  command: 'qemu-img create -f raw -o preallocation=full {{ virtual_disk_prefix }}{{ virtual_disk_vg }}/{{ virtual_guest_name }}-{{ item }} {{ virtual_disks_main_size[item] }}{{ virtual_disk_suffix }}'
  loop: '{{ virtual_disks_main }}'
  throttle: 1
  when: virtual_bootstrap_method != 'bootstrap' and virtual_disk_type == 'file' and virtual_disk_file_allocation == 'qemu-img'

- name: include clone disks
  include_tasks: clone-disks.yml
  when: virtual_bootstrap_method == 'clone'

- name: include bootstrap disks
  include_tasks: bootstrap-disks.yml
  when: virtual_bootstrap_method == 'bootstrap'

- name: include modify disks
  include_tasks: modify-disks.yml
  when: virtual_bootstrap_method == 'clone' or virtual_bootstrap_method == 'bootstrap'

- name: include extra disks
  include_tasks: create-extra-disks.yml
  when: virtual_disks

- name: unmount root and remove mount dir
  when: virtual_bootstrap_method == 'clone' or virtual_bootstrap_method == 'bootstrap'
  block:

  - name: umount root filesystem
    # noqa no-changed-when
    command: 'umount {{ virtual_disk_prefix }}{{ virtual_disk_vg }}/{{ virtual_guest_name }}-root{{ virtual_disk_suffix }}'

  - name: remove mount dir
    file:
      path: '{{ virtual_mount_path }}'
      state: absent

- name: include host boot
  include_tasks: host-boot.yml
  when: virtual_boot_method == 'host'
