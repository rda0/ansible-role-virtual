---
- name: set vm vars for ({{ dist }})
  include_vars: "{{ dist }}/vm.yml"

- stat:
    path: '/dev/{{ vg }}/{{ guest_name }}-root'
  register: guest_lvm_root

- fail:
    msg: 'guest lvm already exists!'
  when: guest_lvm_root.stat.exists is defined and guest_lvm_root.stat.exists == True

- stat:
    path: '/etc/libvirt/qemu/{{ guest_name }}.xml'
  register: guest_xml

- fail:
    msg: 'guest xml already exists!'
  when: guest_xml.stat.exists is defined and guest_xml.stat.exists == True

- name: create lv
  lvol:
    vg: '{{ vg }}'
    lv: '{{ guest_name }}-root'
    size: '{{ disk_size }}'

- name: dump filesystem from template
  command: 'dd if=/dev/r10/vm-template-minimal-root of=/dev/{{ vg }}/{{ guest_name }}-root bs=1M'

- name: check filesystem
  command: 'e2fsck -pf /dev/{{ vg }}/{{ guest_name }}-root'

- name: resize filesystem
  command: 'resize2fs /dev/{{ vg }}/{{ guest_name }}-root'

- name: create vm
  command: |
    virt-install \
    --virt-type=kvm \
    --cpu=host \
    --name={{ guest_name }} \
    --vcpus={{ vcpus }} \
    --memory={{ memory }} \
    --memorybacking=hugepages=yes \
    --controller=type=scsi,model=virtio-scsi \
    --disk=path=/dev/{{ vg }}/{{ guest_name }}-root,bus=scsi,cache=none,address.type=drive,address.controller=0,address.bus=0,address.target=0,address.unit=0 \
    --os-type=linux \
    --os-variant={{ os_variant }} \
    --console=pty,target_type=serial \
    --boot=kernel=/vmlinuz,initrd=/initrd.img,kernel_args="root=/dev/sda elevator=noop nousb console=ttyS0,115200n8 serial" \
    {% if mac is defined %}
    --network=bridge={{ bridge }},model=virtio,mac={{ mac }} \
    {% else %}
    --network=bridge={{ bridge }},model=virtio \
    {% endif %}
    --nographics \
    --noautoconsole \
    --autostart
