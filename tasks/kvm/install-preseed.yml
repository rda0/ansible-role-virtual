---
- name: set preseed vars for ({{ virtual_distribution }}/{{ virtual_codename }})
  include_vars: "{{ virtual_distribution }}/{{ virtual_codename }}/preseed.yml"

- name: create vm dir
  file: path={{ item }} state=directory owner=root group=root mode=0700
  with_items:
    - "{{ vm_path }}/{{ virtual_guest_name }}"

- name: create vm web dir
  file: path={{ item }} state=directory owner=root group=root mode=0755
  with_items:
    - "{{ web_path }}/{{ virtual_guest_name }}"

- name: create preseed.cfg
  template:
    src: "{{ template_type }}/preseed-nolvm.cfg"
    dest: "{{ vm_path }}/{{ virtual_guest_name }}/{{ initrd_inject }}"

- name: create post-install.sh
  template:
    src: "{{ template_type }}/post-install.sh"
    dest: "{{ web_path }}/{{ virtual_guest_name }}/post-install.sh"
    owner: root
    group: root
    mode: 0644

- name: create lv
  lvol:
    vg: '{{ virtual_disk_vg }}'
    lv: '{{ virtual_guest_name }}-root'
    size: '{{ virtual_disk_size }}'

- name: install vm
  command: |
    virt-install \
    --name={{ virtual_guest_name }} \
    --virt-type=kvm \
    {% if virtual_memory_hotpluggable %}
    --cpu=model=host,cell0.id=0,cell0.cpus={{ virtual_numa_cell_cpus }},cell0.memory={{ virtual_numa_cell_memory }} \
    --memory=memory={{ virtual_memory }},hotplugmemorymax={{ virtual_memory_max }},hotplugmemoryslots={{ virtual_memory_slots }} \
    {% else %}
    --cpu=host \
    --memory={{ virtual_memory }} \
    {% endif %}
    {% if virtual_cpus_hotpluggable %}
    --vcpus=vcpus={{ virtual_cpus }},maxvcpus={{ virtual_cpus_max }} \
    {% else %}
    --vcpus={{ virtual_cpus }} \
    {% endif %}
    {% if virtual_memory_hugepages %}
    --memorybacking=hugepages=yes,size={{ virtual_memory_hugepages_size }},unit={{ virtual_memory_hugepages_unit }} \
    {% endif %}
    {% if virtual_memory_balloon %}
    --memballoon=virtio \
    {% else %}
    --memballoon=none \
    {% endif %}
    --controller=type=scsi,model=virtio-scsi \
    --disk=path=/dev/{{ virtual_disk_vg }}/{{ virtual_guest_name }}-root,bus=scsi,cache=none,address.type=drive,address.controller=0,address.bus=0,address.target=0,address.unit=0 \
    --location={{ location }} \
    --os-type=linux \
    --os-variant={{ os_variant }} \
    --console=pty,target_type=serial \
    --initrd-inject={{ vm_path }}/{{ virtual_guest_name }}/preseed.cfg \
    --extra-args='{{ virtual_install_kernel_args }}' \
    {% if virtual_mac is defined %}
    --network=bridge={{ virtual_bridge }},model=virtio,target={{ virtual_interface_name }},mac={{ virtual_mac }} \
    {% else %}
    --network=bridge={{ virtual_bridge }},model=virtio,target={{ virtual_interface_name }} \
    {% endif %}
    --nographics \
    --noautoconsole \
    --autostart

- name: wait until vm is shut off
  command: /usr/bin/virsh domstate {{ virtual_guest_name }}
  register: result
  until: result.stdout.find("shut off") != -1
  retries: 1000
  delay: 10

- name: start vm
  command: /usr/bin/virsh start {{ virtual_guest_name }}
